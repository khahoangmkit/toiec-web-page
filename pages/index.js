import Head from "next/head";
import {
  Box,
  Button,
  Tabs,
  Image,
  Text,
  Flex, Stack
} from "@chakra-ui/react";
import {useRouter} from "next/router";

export default function Home() {

  const router = useRouter();
  // Dữ liệu mẫu cho các bài test
  const testEts = [
    {
      name: "ETS 2024",
      value: 1,
      parts: [
        {
          name: "ETS 2024 - Test 1",
          id: 'ets_2024_test_1',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2024 - Test 2",
          id: 'ets_2024_test_2',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2024 - Test 3",
          id: 'ets_2024_test_3',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2024 - Test 4",
          id: 'ets_2024_test_4',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2024 - Test 5",
          id: 'ets_2024_test_5',
          desc: 'Thời gian: 120 phút'
        },
      ]
    },

    {
      name: "ETS 2023",
      value: 2,
      parts: [
        {
          name: "ETS 2023 - Test 1",
          id: 'ets_2023_test_1',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2023 - Test 2",
          id: 'ets_2023_test_2',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2023 - Test 3",
          id: 'ets_2023_test_3',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2023 - Test 4",
          id: 'ets_2023_test_4',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2023 - Test 5",
          id: 'ets_2023_test_5',
          desc: 'Thời gian: 120 phút'
        },
      ]
    },
    {
      name: "ETS 2022",
      value: 3,
      parts: [
        {
          name: "ETS 2022 - Test 1",
          id: 'ets_2022_test_1',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2022 - Test 2",
          id: 'ets_2022_test_2',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2022 - Test 3",
          id: 'ets_2022_test_3',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2022 - Test 4",
          id: 'ets_2022_test_4',
          desc: 'Thời gian: 120 phút'
        },
        {
          name: "ETS 2022 - Test 5",
          id: 'ets_2022_test_5',
          desc: 'Thời gian: 120 phút'
        },
      ]
    },
  ];

  const toiecTestSection = [
    {
      name: "Listening",
      value: 1,
      parts: [
        {
          name: "Part 1",
          id: 'part_1',
          desc: 'Mô tả tranh'
        },
        {
          name: "Part 2",
          id: 'part_2',
          desc: 'Hỏi và đáp: nghe và chọn câu trả lời phù hợp'

        },
        {
          name: "Part 3",
          id: 'part_3',
          desc: 'Đoạn hội thoại'
        },
        {
          name: "Part 4",
          id: 'part_4',
          desc: 'Bài nói ngắn'
        }
      ]
    },
    {
      name: "Reading",
      value: 2,
      parts: [
        {
          name: "Part 5",
          id: 'part_5',
          desc: 'Hoàn thành câu'
        },
        {
          name: "Part 6",
          id: 'part_6',
          desc: 'Hoàn thành đoạn văn'
        },
        {
          name: "Part 7",
          id: 'part_7',
          desc: 'Đọc hiểu'
        }
      ]
    }
  ]

  const reviews = [
    {id: 1, name: "Nguyễn Văn A", img: "/profile_avatar.png", comment: "Trang web rất hữu ích, giao diện dễ dùng."},
    {id: 2, name: "Trần Thị B", img: "/profile_avatar.png", comment: "Nhờ luyện đề ở đây mình đã tăng 150 điểm!"},
  ];

  function goToFullTest(id) {
    router.push(`/test/${id}`);
  }

  function goToPracticeByPart(id) {
    router.push(`/practice/${id}`);
  }

  return (
    <>
      <Head>
        <title>Toiec Hà Đông</title>
        <meta name="description" content="Generated by hoangdk"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>
      {/* Banner */}
      <Stack
        boxShadow="2xl"
        bg='gray.50'
        rounded="xl"
        p={4}
        spacing={8}
        width="100%"
        align="center">

      <Box width='100%' maxW="1200px" bg='white' rounded='xl' p={4} mx="auto" overflow="hidden" mb={2} boxShadow="xl">
        <Image src="/banner.jpg" alt="Banner" width="100%" height="100%" objectFit="cover"/>
      </Box>

      {/* Luyện đề thi */}
      <Box width='100%' maxW="1200px" bg='white' rounded='xl' p={8}  mx="auto" my={2} boxShadow="xl">
        <Text fontSize="2xl" fontWeight="bold" mb={4}>Làm bài thi TOEIC</Text>

        <Tabs.Root lazyMount unmountOnExit defaultValue={1}>
          <Tabs.List>
            {
              testEts.map((section, idx) => (
                <Tabs.Trigger key={idx} value={section.value}>{section.name}</Tabs.Trigger>
              ))
            }
          </Tabs.List>

          {
            testEts.map((section, idx) => (
              <Tabs.Content key={idx} value={section.value}>
                <Flex gap={4} wrap="wrap" justify={'start'}>
                  {section.parts.map((part, idp) => (
                    <Box borderWidth={1} borderRadius='2xl' p="6" spaceY="2" key={`part-${idp}`} width={{base: '100%', md: '30%'}} mb={4} transition="transform 0.2s, box-shadow 0.2s" _hover={{ boxShadow: 'dark-lg', transform: 'translateY(-4px) scale(1.03)' }}>
                      <Text fontWeight='bold'>{part.name}</Text>
                      <Text>{part.desc}</Text>

                      <Button
                        onClick={() => {goToFullTest(part.id)}}
                        colorPalette="teal"
                        variant="solid">
                        Luyện thi
                      </Button>
                    </Box>
                  ))}
                </Flex>
              </Tabs.Content>
            ))
          }
        </Tabs.Root>
      </Box>

      {/* Luyện thi theo từng phần */}
      <Box width='100%' maxW="1200px"  bg='white' rounded='xl' p={8}  mx="auto" my={2} boxShadow="xl">
        <Text fontSize="2xl" fontWeight="bold" mb={4}>Luyện thi theo từng phần</Text>
        <Tabs.Root lazyMount unmountOnExit defaultValue={1}>
          <Tabs.List>
            {
              toiecTestSection.map((section, idx) => (
                <Tabs.Trigger key={idx} value={section.value}>{section.name}</Tabs.Trigger>
              ))
            }
          </Tabs.List>

          {
            toiecTestSection.map((section, idx) => (
              <Tabs.Content key={idx} value={section.value}>
                <Flex gap={4} wrap="wrap" justify={'start'}>
                  {section.parts.map((part, idp) => (
                    <Box borderWidth={1} borderRadius='2xl' p="6" spaceY="2" key={`part-${idp}`} width={{base: '100%', md: '30%'}} mb={4} transition="transform 0.2s, box-shadow 0.2s" _hover={{ boxShadow: 'dark-lg', transform: 'translateY(-4px) scale(1.03)' }}>
                      <Text fontWeight='bold'>{part.name}</Text>
                      <Text>{part.desc}</Text>

                      <Button
                        onClick={() => {goToPracticeByPart(part.id)}}
                        colorPalette="teal" variant="solid">
                        Luyện thi
                      </Button>
                    </Box>
                  ))}
                </Flex>
              </Tabs.Content>
            ))
          }
        </Tabs.Root>
      </Box>

      {/* Đánh giá của học sinh */}
      <Box width='100%' maxW="1200px"  bg='white' rounded='xl' p={8}  mx="auto"  my={2} boxShadow="xl">
        <Text fontSize="2xl" fontWeight="bold" mb={4}>Đánh giá của học sinh</Text>
        <Flex gap={4} wrap="wrap" justify={'start'}>
          {reviews.map(r => (
            <Box key={r.id} p={6} borderWidth="1px" borderRadius="2xl" bg="white" transition="transform 0.2s, box-shadow 0.2s" _hover={{ boxShadow: 'dark-lg', transform: 'translateY(-4px) scale(1.03)' }}>
              <Flex align="center" gap={4} mb={2}>
                <Text fontWeight="bold">{r.name}</Text>
              </Flex>
              <Text fontSize="sm">"{r.comment}"</Text>
            </Box>
          ))}
        </Flex>
      </Box>

      </Stack>
    </>
  );
}
