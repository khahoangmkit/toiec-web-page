// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  name           String?
  email          String   @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  createdAt      DateTime @default(now())
  comments       Comment[]
}

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  access_token       String?
  expires_at         Int?
  id_token           String?
  scope              String?
  token_type         String?
  refresh_token      String?

  user User @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Result {
  id          String   @id @default(cuid())
  userId      String
  testId      String
  testName    String  @default("")
  answers     Json
  isFullTest  Boolean @default(false)
  listeningCorrect Int @default(0)
  readingCorrect   Int @default(0)
  totalListening   Int @default(0)
  totalReading     Int @default(0)
  parts       Json     // Lưu danh sách các phần người dùng chọn
  submittedAt DateTime @default(now())
}

model Comment {
  id        String    @id @default(cuid())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  testId    String    // Liên kết với từng bài thi (vd: ets_2024_test_1)
  parent    Comment?  @relation("CommentToReplies", fields: [parentId], references: [id])
  parentId  String?
  replies   Comment[] @relation("CommentToReplies")
}
